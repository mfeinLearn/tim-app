{"ast":null,"code":"var _jsxFileName = \"/Users/malcomefein/Development/python/flatiron-curriculum-python/react-and-python-application/tim-v1/client/src/pages/NewRecipe.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// import { useState } from \"react\";\n// import { useHistory } from \"react-router\";\n// import styled from \"styled-components\";\n// import ReactMarkdown from \"react-markdown\";\n// import { Button, Error, FormField, Input, Label, Textarea } from \"../styles\";\n\nfunction NewRecipe(_ref) {\n  let {\n    user\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"In the NewRecipe\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, this);\n  //   const [title, setTitle] = useState(\"My Awesome Recipe\");\n  //   const [minutesToComplete, setMinutesToComplete] = useState(\"30\");\n  //   const [instructions, setInstructions] = useState(`Here's how you make it.\n\n  // ## Ingredients\n\n  // - 1c Sugar\n  // - 1c Spice\n\n  // ## Instructions\n\n  // **Mix** sugar and spice. _Bake_ for 30 minutes.\n  //   `);\n  //   const [errors, setErrors] = useState([]);\n  //   const [isLoading, setIsLoading] = useState(false);\n  //   const history = useHistory();\n\n  //   function handleSubmit(e) {\n  //     e.preventDefault();\n  //     setIsLoading(true);\n  //     fetch(\"/recipes\", {\n  //       method: \"POST\",\n  //       headers: {\n  //         \"Content-Type\": \"application/json\",\n  //       },\n  //       body: JSON.stringify({\n  //         title,\n  //         instructions,\n  //         minutes_to_complete: minutesToComplete,\n  //       }),\n  //     }).then((r) => {\n  //       setIsLoading(false);\n  //       if (r.ok) {\n  //         history.push(\"/\");\n  //       } else {\n  //         r.json().then((err) => setErrors(err.errors));\n  //       }\n  //     });\n  //   }\n\n  //   return (\n  //     <Wrapper>\n  //       <WrapperChild>\n  //         <h2>Create Recipe</h2>\n  //         <form onSubmit={handleSubmit}>\n  //           <FormField>\n  //             <Label htmlFor=\"title\">Title</Label>\n  //             <Input\n  //               type=\"text\"\n  //               id=\"title\"\n  //               value={title}\n  //               onChange={(e) => setTitle(e.target.value)}\n  //             />\n  //           </FormField>\n  //           <FormField>\n  //             <Label htmlFor=\"minutesToComplete\">Minutes to complete</Label>\n  //             <Input\n  //               type=\"number\"\n  //               id=\"minutesToComplete\"\n  //               value={minutesToComplete}\n  //               onChange={(e) => setMinutesToComplete(e.target.value)}\n  //             />\n  //           </FormField>\n  //           <FormField>\n  //             <Label htmlFor=\"instructions\">Instructions</Label>\n  //             <Textarea\n  //               id=\"instructions\"\n  //               rows=\"10\"\n  //               value={instructions}\n  //               onChange={(e) => setInstructions(e.target.value)}\n  //             />\n  //           </FormField>\n  //           <FormField>\n  //             <Button color=\"primary\" type=\"submit\">\n  //               {isLoading ? \"Loading...\" : \"Submit Recipe\"}\n  //             </Button>\n  //           </FormField>\n  //           <FormField>\n  //             {errors.map((err) => (\n  //               <Error key={err}>{err}</Error>\n  //             ))}\n  //           </FormField>\n  //         </form>\n  //       </WrapperChild>\n  //       <WrapperChild>\n  //         <h1>{title}</h1>\n  //         <p>\n  //           <em>Time to Complete: {minutesToComplete} minutes</em>\n  //           &nbsp;·&nbsp;\n  //           <cite>By {user.username}</cite>\n  //         </p>\n  //         <ReactMarkdown>{instructions}</ReactMarkdown>\n  //       </WrapperChild>\n  //     </Wrapper>\n  //   );\n}\n\n// const Wrapper = styled.section`\n//   max-width: 1000px;\n//   margin: 40px auto;\n//   padding: 16px;\n//   display: flex;\n//   gap: 24px;\n// `;\n\n// const WrapperChild = styled.div`\n//   flex: 1;\n// `;\n_c = NewRecipe;\nexport default NewRecipe;\nvar _c;\n$RefreshReg$(_c, \"NewRecipe\");","map":{"version":3,"names":["NewRecipe","user"],"sources":["/Users/malcomefein/Development/python/flatiron-curriculum-python/react-and-python-application/tim-v1/client/src/pages/NewRecipe.js"],"sourcesContent":["// import { useState } from \"react\";\n// import { useHistory } from \"react-router\";\n// import styled from \"styled-components\";\n// import ReactMarkdown from \"react-markdown\";\n// import { Button, Error, FormField, Input, Label, Textarea } from \"../styles\";\n\nfunction NewRecipe({ user }) {\n  return <h1>In the NewRecipe</h1>;\n  //   const [title, setTitle] = useState(\"My Awesome Recipe\");\n  //   const [minutesToComplete, setMinutesToComplete] = useState(\"30\");\n  //   const [instructions, setInstructions] = useState(`Here's how you make it.\n\n  // ## Ingredients\n\n  // - 1c Sugar\n  // - 1c Spice\n\n  // ## Instructions\n\n  // **Mix** sugar and spice. _Bake_ for 30 minutes.\n  //   `);\n  //   const [errors, setErrors] = useState([]);\n  //   const [isLoading, setIsLoading] = useState(false);\n  //   const history = useHistory();\n\n  //   function handleSubmit(e) {\n  //     e.preventDefault();\n  //     setIsLoading(true);\n  //     fetch(\"/recipes\", {\n  //       method: \"POST\",\n  //       headers: {\n  //         \"Content-Type\": \"application/json\",\n  //       },\n  //       body: JSON.stringify({\n  //         title,\n  //         instructions,\n  //         minutes_to_complete: minutesToComplete,\n  //       }),\n  //     }).then((r) => {\n  //       setIsLoading(false);\n  //       if (r.ok) {\n  //         history.push(\"/\");\n  //       } else {\n  //         r.json().then((err) => setErrors(err.errors));\n  //       }\n  //     });\n  //   }\n\n  //   return (\n  //     <Wrapper>\n  //       <WrapperChild>\n  //         <h2>Create Recipe</h2>\n  //         <form onSubmit={handleSubmit}>\n  //           <FormField>\n  //             <Label htmlFor=\"title\">Title</Label>\n  //             <Input\n  //               type=\"text\"\n  //               id=\"title\"\n  //               value={title}\n  //               onChange={(e) => setTitle(e.target.value)}\n  //             />\n  //           </FormField>\n  //           <FormField>\n  //             <Label htmlFor=\"minutesToComplete\">Minutes to complete</Label>\n  //             <Input\n  //               type=\"number\"\n  //               id=\"minutesToComplete\"\n  //               value={minutesToComplete}\n  //               onChange={(e) => setMinutesToComplete(e.target.value)}\n  //             />\n  //           </FormField>\n  //           <FormField>\n  //             <Label htmlFor=\"instructions\">Instructions</Label>\n  //             <Textarea\n  //               id=\"instructions\"\n  //               rows=\"10\"\n  //               value={instructions}\n  //               onChange={(e) => setInstructions(e.target.value)}\n  //             />\n  //           </FormField>\n  //           <FormField>\n  //             <Button color=\"primary\" type=\"submit\">\n  //               {isLoading ? \"Loading...\" : \"Submit Recipe\"}\n  //             </Button>\n  //           </FormField>\n  //           <FormField>\n  //             {errors.map((err) => (\n  //               <Error key={err}>{err}</Error>\n  //             ))}\n  //           </FormField>\n  //         </form>\n  //       </WrapperChild>\n  //       <WrapperChild>\n  //         <h1>{title}</h1>\n  //         <p>\n  //           <em>Time to Complete: {minutesToComplete} minutes</em>\n  //           &nbsp;·&nbsp;\n  //           <cite>By {user.username}</cite>\n  //         </p>\n  //         <ReactMarkdown>{instructions}</ReactMarkdown>\n  //       </WrapperChild>\n  //     </Wrapper>\n  //   );\n}\n\n// const Wrapper = styled.section`\n//   max-width: 1000px;\n//   margin: 40px auto;\n//   padding: 16px;\n//   display: flex;\n//   gap: 24px;\n// `;\n\n// const WrapperChild = styled.div`\n//   flex: 1;\n// `;\n\nexport default NewRecipe;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA,SAASA,SAAS,OAAW;EAAA,IAAV;IAAEC;EAAK,CAAC;EACzB,oBAAO;IAAA,UAAI;EAAgB;IAAA;IAAA;IAAA;EAAA,QAAK;EAChC;EACA;EACA;;EAEA;;EAEA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA,KA7GSD,SAAS;AA+GlB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}